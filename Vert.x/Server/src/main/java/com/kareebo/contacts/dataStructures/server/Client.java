package com.kareebo.contacts.dataStructures.server;

import com.kareebo.contacts.dataStructures.common.Id;
import com.kareebo.contacts.dataStructures.common.PublicKeys;

import java.util.HashSet;

/**
 * Server-side client representation
 */
public class Client extends com.kareebo.contacts.dataStructures.common.Client
{
	/**
	 * Whether the client is registered
	 */
	private final boolean registered;
	/**
	 * The public keys of the client
	 */
	private final PublicKeys publicKeys;
	/**
	 * The set of contacts of the client
	 */
	private final HashSet<Contact> contacts;

	/**
	 * @param platform   Information about the OS, it is generated by the client's system
	 * @param version    The version of the client
	 * @param id         The client id
	 * @param registered Whether the client is registered
	 * @param publicKeys The public keys of the client
	 * @param contacts   The set of contacts for the client
	 */
	public Client(final String platform,final String version,final Id id,final boolean registered,final
	PublicKeys publicKeys,final HashSet<Contact> contacts)
	{
		super(platform,version,id);
		this.registered=registered;
		this.publicKeys=publicKeys;
		this.contacts=contacts;
	}

	/**
	 * @return The public keys of the client
	 */
	public PublicKeys getPublicKeys()
	{
		return publicKeys;
	}

	/**
	 * @return Whether the client is registered
	 */
	public boolean isRegistered()
	{
		return registered;
	}

	/**
	 * @return The set of contacts of the client
	 */
	public HashSet<Contact> getContacts()
	{
		return contacts;
	}
}
